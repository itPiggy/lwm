<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.piggy.lwm.mapper.OutboundRecordMapper">

    <resultMap type="com.piggy.lwm.domain.OutboundRecordEntity" id="OutboundRecordMap">
        <result property="recordId" column="record_id" jdbcType="VARCHAR"/>
        <result property="goodsId" column="goods_id" jdbcType="VARCHAR"/>
        <result property="warehouseId" column="warehouse_id" jdbcType="VARCHAR"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="operatorId" column="operator_id" jdbcType="INTEGER"/>
        <result property="outboundTime" column="outbound_time" jdbcType="VARCHAR"/>
    </resultMap>
    
    <sql id="baseSql">
        select
record_id, goods_id, warehouse_id, quantity, operator_id, outbound_time
        from outbound_record
        where del_mark = 1
    </sql>
    <sql id="condition">
            <if test="outboundRecord.recordId != null and outboundRecord.recordId != ''">
                and record_id = #{outboundRecord.recordId}
            </if>
            <if test="outboundRecord.goodsId != null and outboundRecord.goodsId != ''">
                and goods_id = #{outboundRecord.goodsId}
            </if>
            <if test="outboundRecord.warehouseId != null and outboundRecord.warehouseId != ''">
                and warehouse_id = #{outboundRecord.warehouseId}
            </if>
            <if test="outboundRecord.quantity != null">
                and quantity = #{outboundRecord.quantity}
            </if>
            <if test="outboundRecord.operatorId != null">
                and operator_id = #{outboundRecord.operatorId}
            </if>
            <if test="outboundRecord.outboundTime != null and outboundRecord.outboundTime != ''">
                and outbound_time = #{outboundRecord.outboundTime}
            </if>
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="OutboundRecordMap">
        <include refid="baseSql"></include>
        and record_id = #{recordId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OutboundRecordMap">
        <include refid="baseSql"></include>
        <include refid="condition"></include>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from outbound_record
        where del_mark  = 1
            <if test="recordId != null and recordId != ''">
                and record_id = #{recordId}
            </if>
            <if test="goodsId != null and goodsId != ''">
                and goods_id = #{goodsId}
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                and warehouse_id = #{warehouseId}
            </if>
            <if test="quantity != null">
                and quantity = #{quantity}
            </if>
            <if test="operatorId != null">
                and operator_id = #{operatorId}
            </if>
            <if test="outboundTime != null and outboundTime != ''">
                and outbound_time = #{outboundTime}
            </if>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="recordId" useGeneratedKeys="true">
        insert into outbound_record(goods_id, warehouse_id, quantity, operator_id, outbound_time)
        values (#{goodsId}, #{warehouseId}, #{quantity}, #{operatorId}, #{outboundTime})
    </insert>

    <insert id="insertBatch" keyProperty="recordId" useGeneratedKeys="true">
        insert into outbound_record(goods_id, warehouse_id, quantity, operator_id, outbound_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.goodsId}, #{entity.warehouseId}, #{entity.quantity}, #{entity.operatorId}, #{entity.outboundTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="recordId" useGeneratedKeys="true">
        insert into outbound_record(goods_id, warehouse_id, quantity, operator_id, outbound_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.goodsId}, #{entity.warehouseId}, #{entity.quantity}, #{entity.operatorId}, #{entity.outboundTime})
        </foreach>
        on duplicate key update
goods_id = values(goods_id)warehouse_id = values(warehouse_id)quantity = values(quantity)operator_id = values(operator_id)outbound_time = values(outbound_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update outbound_record
        <set>
            <if test="goodsId != null and goodsId != ''">
                goods_id = #{goodsId},
            </if>
            <if test="warehouseId != null and warehouseId != ''">
                warehouse_id = #{warehouseId},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId},
            </if>
            <if test="outboundTime != null and outboundTime != ''">
                outbound_time = #{outboundTime},
            </if>
        </set>
        where record_id = #{recordId}
    </update>

    <!--通过主键删除-->
    <update id="deleteById">
        update outbound_record set del_mark=0 where record_id = #{recordId}
    </update>

</mapper>

